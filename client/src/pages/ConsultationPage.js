import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import Button from '../components/ui/Button';
import { Card } from '../components/ui/Card';
import { useGSAP } from '../hooks/useGSAP';
import { useIntersectionObserver } from '../hooks/useIntersectionObserver';

const ConsultationPage = () => {
  const navigate = useNavigate();
  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    email: '',
    service: '',
    message: '',
    preferredTime: '',
    urgency: 'normal'
  });

  const [isSubmitting, setIsSubmitting] = useState(false);

  const { ref: pageRef, hasIntersected } = useIntersectionObserver();
  
  const contentRef = useGSAP((gsap, element) => {
    if (hasIntersected) {
      gsap.fromTo('.consultation-content',
        { opacity: 0, y: 30 },
        { opacity: 1, y: 0, duration: 0.8, ease: "power2.out" }
      );
    }
  }, [hasIntersected]);

  const services = [
    { id: 'cleaning', name: 'D·ªçn d·∫πp nh√† c·ª≠a', icon: 'üè†' },
    { id: 'laundry', name: 'Gi·∫∑t ·ªßi', icon: 'üëï' },
    { id: 'other', name: 'D·ªãch v·ª• kh√°c', icon: '‚ú®' }
  ];

  const timeSlots = [
    '08:00 - 10:00', '10:00 - 12:00', '13:00 - 15:00', 
    '15:00 - 17:00', '17:00 - 19:00', '19:00 - 21:00'
  ];

  const urgencyLevels = [
    { id: 'low', name: 'Kh√¥ng g·∫•p', color: 'text-green-600' },
    { id: 'normal', name: 'B√¨nh th∆∞·ªùng', color: 'text-blue-600' },
    { id: 'high', name: 'G·∫•p', color: 'text-orange-600' },
    { id: 'urgent', name: 'R·∫•t g·∫•p', color: 'text-red-600' }
  ];

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleServiceSelect = (serviceId) => {
    setFormData(prev => ({
      ...prev,
      service: serviceId
    }));
  };

  const handleUrgencySelect = (urgencyId) => {
    setFormData(prev => ({
      ...prev,
      urgency: urgencyId
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsSubmitting(true);
    
    // Simulate API call
    setTimeout(() => {
      setIsSubmitting(false);
      alert('G·ª≠i y√™u c·∫ßu t∆∞ v·∫•n th√†nh c√¥ng! Ch√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n trong v√≤ng 24 gi·ªù.');
              navigate('/my-orders');
    }, 2000);
  };

  const selectedService = services.find(s => s.id === formData.service);
  const selectedUrgency = urgencyLevels.find(u => u.id === formData.urgency);

  return (
    <div ref={pageRef} className="min-h-screen bg-gradient-to-br from-primary-50 to-secondary-50 py-20">
      <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
        <div ref={contentRef} className="consultation-content">
          {/* Header */}
          <div className="text-center mb-16">
            <h1 className="text-4xl lg:text-5xl font-bold text-neutral-900 mb-6">
              Li√™n H·ªá T∆∞ V·∫•n
            </h1>
            <p className="text-xl text-neutral-600 max-w-3xl mx-auto">
              ƒê·ªôi ng≈© chuy√™n vi√™n t∆∞ v·∫•n c·ªßa ch√∫ng t√¥i s·∫µn s√†ng h·ªó tr·ª£ b·∫°n ch·ªçn d·ªãch v·ª• ph√π h·ª£p nh·∫•t. 
              H√£y ƒë·ªÉ l·∫°i th√¥ng tin v√† ch√∫ng t√¥i s·∫Ω li√™n h·ªá trong th·ªùi gian s·ªõm nh·∫•t.
            </p>
          </div>

          <div className="grid lg:grid-cols-3 gap-12">
            {/* Contact Form */}
            <div className="lg:col-span-2">
              <Card className="p-8">
                <h2 className="text-2xl font-bold text-neutral-900 mb-6">
                  Th√¥ng Tin Li√™n H·ªá
                </h2>
                
                <form onSubmit={handleSubmit} className="space-y-6">
                  {/* Personal Information */}
                  <div className="grid md:grid-cols-2 gap-6">
                    <div>
                      <label className="block text-sm font-medium text-neutral-700 mb-2">
                        H·ªç v√† t√™n *
                      </label>
                      <input
                        type="text"
                        name="name"
                        value={formData.name}
                        onChange={handleInputChange}
                        required
                        className="w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                        placeholder="Nh·∫≠p h·ªç v√† t√™n"
                      />
                    </div>
                    <div>
                      <label className="block text-sm font-medium text-neutral-700 mb-2">
                        S·ªë ƒëi·ªán tho·∫°i *
                      </label>
                      <input
                        type="tel"
                        name="phone"
                        value={formData.phone}
                        onChange={handleInputChange}
                        required
                        className="w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                        placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
                      />
                    </div>
                    <div>
                      <label className="block text-sm font-medium text-neutral-700 mb-2">
                        Email
                      </label>
                      <input
                        type="email"
                        name="email"
                        value={formData.email}
                        onChange={handleInputChange}
                        className="w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                        placeholder="Nh·∫≠p email (kh√¥ng b·∫Øt bu·ªôc)"
                      />
                    </div>
                    <div>
                      <label className="block text-sm font-medium text-neutral-700 mb-2">
                        Th·ªùi gian li√™n h·ªá ph√π h·ª£p
                      </label>
                      <select
                        name="preferredTime"
                        value={formData.preferredTime}
                        onChange={handleInputChange}
                        className="w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                      >
                        <option value="">Ch·ªçn th·ªùi gian</option>
                        {timeSlots.map(time => (
                          <option key={time} value={time}>{time}</option>
                        ))}
                      </select>
                    </div>
                  </div>

                  {/* Service Selection */}
                  <div>
                    <label className="block text-sm font-medium text-neutral-700 mb-4">
                      D·ªãch v·ª• quan t√¢m *
                    </label>
                    <div className="grid md:grid-cols-2 gap-3">
                      {services.map((service) => (
                        <div
                          key={service.id}
                          onClick={() => handleServiceSelect(service.id)}
                          className={`p-4 border-2 rounded-lg cursor-pointer transition-all ${
                            formData.service === service.id
                              ? 'border-primary-600 bg-primary-50'
                              : 'border-neutral-200 hover:border-primary-300'
                          }`}
                        >
                          <div className="flex items-center space-x-3">
                            <span className="text-xl">{service.icon}</span>
                            <span className="font-medium text-neutral-900">
                              {service.name}
                            </span>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>

                  {/* Urgency Level */}
                  <div>
                    <label className="block text-sm font-medium text-neutral-700 mb-4">
                      M·ª©c ƒë·ªô ∆∞u ti√™n
                    </label>
                    <div className="grid md:grid-cols-4 gap-3">
                      {urgencyLevels.map((urgency) => (
                        <div
                          key={urgency.id}
                          onClick={() => handleUrgencySelect(urgency.id)}
                          className={`p-3 border-2 rounded-lg cursor-pointer transition-all text-center ${
                            formData.urgency === urgency.id
                              ? 'border-primary-600 bg-primary-50'
                              : 'border-neutral-200 hover:border-primary-300'
                          }`}
                        >
                          <span className={`font-medium ${urgency.color}`}>
                            {urgency.name}
                          </span>
                        </div>
                      ))}
                    </div>
                  </div>

                  {/* Message */}
                  <div>
                    <label className="block text-sm font-medium text-neutral-700 mb-2">
                      N·ªôi dung c·∫ßn t∆∞ v·∫•n *
                    </label>
                    <textarea
                      name="message"
                      value={formData.message}
                      onChange={handleInputChange}
                      required
                      rows="6"
                      className="w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                      placeholder="M√¥ t·∫£ chi ti·∫øt nhu c·∫ßu c·ªßa b·∫°n ƒë·ªÉ ch√∫ng t√¥i c√≥ th·ªÉ t∆∞ v·∫•n t·ªët nh·∫•t..."
                    />
                  </div>

                  {/* Submit Button */}
                  <div className="flex justify-end">
                    <Button 
                      type="submit"
                      disabled={isSubmitting}
                      className="min-w-[150px]"
                    >
                      {isSubmitting ? 'ƒêang g·ª≠i...' : 'G·ª≠i y√™u c·∫ßu t∆∞ v·∫•n'}
                    </Button>
                  </div>
                </form>
              </Card>
            </div>

            {/* Information Sidebar */}
            <div className="lg:col-span-1 space-y-6">
              {/* Contact Info */}
              <Card className="p-6">
                <h3 className="text-xl font-bold text-neutral-900 mb-4">
                  Th√¥ng Tin Li√™n H·ªá
                </h3>
                <div className="space-y-4">
                  <div className="flex items-center space-x-3">
                    <div className="w-10 h-10 bg-primary-100 rounded-full flex items-center justify-center">
                      <span className="text-primary-600">üìû</span>
                    </div>
                    <div>
                      <p className="font-semibold text-neutral-900">Hotline</p>
                      <p className="text-neutral-600">1900 1234</p>
                    </div>
                  </div>
                  <div className="flex items-center space-x-3">
                    <div className="w-10 h-10 bg-primary-100 rounded-full flex items-center justify-center">
                      <span className="text-primary-600">üìß</span>
                    </div>
                    <div>
                      <p className="font-semibold text-neutral-900">Email</p>
                      <p className="text-neutral-600">tuvan@mymaid.vn</p>
                    </div>
                  </div>
                  <div className="flex items-center space-x-3">
                    <div className="w-10 h-10 bg-primary-100 rounded-full flex items-center justify-center">
                      <span className="text-primary-600">üïí</span>
                    </div>
                    <div>
                      <p className="font-semibold text-neutral-900">Gi·ªù l√†m vi·ªác</p>
                      <p className="text-neutral-600">7:00 - 22:00 (T2-CN)</p>
                    </div>
                  </div>
                </div>
              </Card>

              {/* Why Choose Us */}
              <Card className="p-6">
                <h3 className="text-xl font-bold text-neutral-900 mb-4">
                  T·∫°i Sao Ch·ªçn MyMaid?
                </h3>
                <div className="space-y-3">
                  <div className="flex items-start space-x-3">
                    <span className="text-green-500 text-lg">‚úì</span>
                    <p className="text-sm text-neutral-600">
                      T∆∞ v·∫•n mi·ªÖn ph√≠, kh√¥ng r√†ng bu·ªôc
                    </p>
                  </div>
                  <div className="flex items-start space-x-3">
                    <span className="text-green-500 text-lg">‚úì</span>
                    <p className="text-sm text-neutral-600">
                      ƒê·ªôi ng≈© chuy√™n vi√™n gi√†u kinh nghi·ªám
                    </p>
                  </div>
                  <div className="flex items-start space-x-3">
                    <span className="text-green-500 text-lg">‚úì</span>
                    <p className="text-sm text-neutral-600">
                      Ph·∫£n h·ªìi nhanh ch√≥ng trong 24h
                    </p>
                  </div>
                  <div className="flex items-start space-x-3">
                    <span className="text-green-500 text-lg">‚úì</span>
                    <p className="text-sm text-neutral-600">
                      Gi·∫£i ph√°p t√πy ch·ªânh theo nhu c·∫ßu
                    </p>
                  </div>
                </div>
              </Card>

              {/* Quick Actions */}
              <Card className="p-6">
                <h3 className="text-xl font-bold text-neutral-900 mb-4">
                  H√†nh ƒê·ªông Nhanh
                </h3>
                <div className="space-y-3">
                  <Button 
                    variant="outline" 
                    className="w-full"
                    onClick={() => navigate('/booking')}
                  >
                    ƒê·∫∑t d·ªãch v·ª• ngay
                  </Button>
                  <Button 
                    variant="outline" 
                    className="w-full"
                    onClick={() => navigate('/services')}
                  >
                    Xem b·∫£ng gi√°
                  </Button>
                  <Button 
                    variant="outline" 
                    className="w-full"
                    onClick={() => navigate('/services')}
                  >
                    T√¨m hi·ªÉu th√™m
                  </Button>
                </div>
              </Card>
            </div>
          </div>

          {/* Summary Section */}
          {selectedService && (
            <div className="mt-12">
              <Card className="p-6 bg-gradient-to-r from-primary-50 to-secondary-50">
                <h3 className="text-xl font-bold text-neutral-900 mb-4">
                  T√≥m T·∫Øt Y√™u C·∫ßu
                </h3>
                <div className="grid md:grid-cols-3 gap-6">
                  <div className="flex items-center space-x-3">
                    <span className="text-2xl">{selectedService.icon}</span>
                    <div>
                      <p className="font-semibold text-neutral-900">D·ªãch v·ª•</p>
                      <p className="text-neutral-600">{selectedService.name}</p>
                    </div>
                  </div>
                  <div className="flex items-center space-x-3">
                    <span className="text-2xl">‚è∞</span>
                    <div>
                      <p className="font-semibold text-neutral-900">Th·ªùi gian</p>
                      <p className="text-neutral-600">{formData.preferredTime || 'Ch∆∞a ch·ªçn'}</p>
                    </div>
                  </div>
                  <div className="flex items-center space-x-3">
                    <span className="text-2xl">üö®</span>
                    <div>
                      <p className="font-semibold text-neutral-900">M·ª©c ƒë·ªô ∆∞u ti√™n</p>
                      <p className={`${selectedUrgency?.color}`}>{selectedUrgency?.name}</p>
                    </div>
                  </div>
                </div>
              </Card>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default ConsultationPage; 